apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'org.sonarqube'

android {
    lintOptions {
        disable 'GradleDependency', 'GradleCompatible'
    }

    dokka {
        outputFormat = 'html'
        outputDirectory = "$buildDir/kdoc"
    }

    sonarqube {
        properties {
            property "sonar.organization", "robertene1994-github"
            property "sonar.projectName", "lostpets-android"
            property "sonar.projectKey", "robertene1994_lostpets-android"
            property "sonar.host.url", "https://sonarcloud.io"
            property "sonar.projectVersion", "1.0.0"
        }
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.robert.android.lostpets"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Google Maps API
        manifestPlaceholders = [GOOGLE_MAPS_API_KEY: "${System.getenv("GOOGLE_MAPS_API_KEY")}"]

        // Generic Endpoint
        buildConfigField('String', 'LOST_PETS_USER_TOPIC', '"/exchange/chatMessage/userEmail"')
        buildConfigField('String', 'LOST_PETS_USER_DESTINATION', '"/send/chatMessage/userEmail"')

        // Development Endpoint (localhost)
        buildConfigField('String', 'LOST_PETS_API', '"http://127.0. 0.1:8080/"')
        buildConfigField('String', 'LOST_PETS_MESSAGING', '"ws://127.0.0.1:8080/lostpets-ws/websocket"')

        // Tesing Endpoint (localhost)
        buildConfigField('String', 'LOST_PETS_API_TEST', '"/test/"')
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        debugEmulator {
            testCoverageEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'

            // Development Endpoint (localhost alternative for Android Emulator (AVD))
            buildConfigField('String', 'LOST_PETS_API', '"http://10.0.2.2:8080/"')
            buildConfigField('String', 'LOST_PETS_MESSAGING', '"ws://10.0.2.2:8080/lostpets-ws/websocket"')
        }

        releaseAws {
            testCoverageEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'

            // Production Endpoint (AWS)
            buildConfigField('String', 'LOST_PETS_API', '"http://ec2-3-236-13-135.compute-1.amazonaws.com:8080/LostPets/"')
            buildConfigField('String', 'LOST_PETS_MESSAGING', '"ws://ec2-3-236-13-135.compute-1.amazonaws.com:8080/LostPets/lostpets-ws/websocket"')
        }

        releaseHeroku {
            testCoverageEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'

            // Production Endpoint (Heroku)
            buildConfigField('String', 'LOST_PETS_API', '"https://lostpets-back-end.herokuapp.com/"')
            buildConfigField('String', 'LOST_PETS_MESSAGING', '"wss://lostpets-back-end.herokuapp.com/lostpets-ws/websocket"')
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:exifinterface:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    // Anko
    implementation "org.jetbrains.anko:anko-commons:$ankoVersion"
    implementation "org.jetbrains.anko:anko-design:$ankoVersion"

    // Local Unit Tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpMockVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"

    // Android Unit Tests
    androidTestImplementation "junit:junit:$junitVersion"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofitVersion"

    // Photos
    implementation "com.squareup.picasso:picasso:$picassoVersion"

    // Google Maps
    implementation "com.google.android.gms:play-services-maps:$googleMapsVersion"

    // JSON
    implementation "com.google.code.gson:gson:$gsonVersion"

    // Messaging
    implementation "com.github.NaikSoftware:StompProtocolAndroid:$stompVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
}
